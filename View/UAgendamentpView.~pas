unit UAgendamentpView;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, Mask, uMessageUtil;

type
  TfrmAgendamento = class(TForm)
    pnlAgendamento: TPanel;
    Label1: TLabel;
    pnlBotoes: TPanel;
    pnlDados: TPanel;
    btnIncluir: TButton;
    btnAlterar: TButton;
    btnExcluir: TButton;
    btnConsultar: TButton;
    btnSair: TButton;
    lblCodigo: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    edtCodigo: TEdit;
    edtNome: TEdit;
    edtData: TMaskEdit;
    edtHora: TMaskEdit;
    lblMedico: TLabel;
    edtMedico: TEdit;
    Label5: TLabel;
    cmbConsulta: TComboBox;
    lblConsuta: TLabel;
    cmbEspecialidade: TComboBox;
    Label6: TLabel;
    Memo1: TMemo;
    btnConfirmar: TButton;
    btnCancelar: TButton;
    Aviso: TLabel;
    Timer1: TTimer;
    procedure btnSairClick(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }
    vKey      : Word;


  public
    { Public declarations }
  end;

var
  frmAgendamento: TfrmAgendamento;

implementation

{$R *.dfm}

procedure TfrmAgendamento.btnSairClick(Sender: TObject);
begin
   Close;
end;

procedure TfrmAgendamento.Timer1Timer(Sender: TObject);
begin
   Aviso.Visible := not Aviso.Visible ;
end;

procedure TfrmAgendamento.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
   vKey := Key;

   case vKey of

      VK_RETURN:
      begin
         Perform(WM_NEXTDLGCTL, 0, 0);
      end;

      VK_ESCAPE:
      begin
         if (TMessageUtil.Pergunta('Deseja sair dessa rotina?')) then
            Close;
      end;

   end;
end;

end.
